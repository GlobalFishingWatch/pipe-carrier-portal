-- Get the longitude of the antipode for a given longitude
--
-- This funtion transforms the longitude to the meridian on the opposite side of the world
-- This is useful for doing operations with data that spans the anti-meridian
--
-- Apply the function again to the transformed value to return to the original meridian
--
-- Example
--   anti_lon(0.0) = 0.0
--   anti_lon(90.0) = -90.0
--   anti_lon(-90.0) = 90.0
--   anti_lon(-179.0) = 1.0
--   anti_lon(1.0) = -179.0
--
CREATE TEMPORARY FUNCTION anti_lon ( lon FLOAT64 )
AS (
  IF (lon < 0, 180.0 + lon, (180 - lon) * -1)
);


-- Convert a lat,lon pont in a GEOGRAPHY, such as created with ST_GEOGPOINT(lon, lat)
-- Retrns a STRUCT(lon, lat)
--
-- It seems ridiculous that we have to convert to json and then parse it to do this, but bigquery
-- does not provide any other way to get the lat/lon out of a GEOGRAPHY

CREATE TEMPORARY FUNCTION geopoint_to_struct (pt GEOGRAPHY)
AS (
  STRUCT(
    CAST(JSON_EXTRACT_SCALAR(ST_ASGEOJSON(pt), "$['coordinates'][0]") AS FLOAT64) as lon,
    CAST(JSON_EXTRACT_SCALAR(ST_ASGEOJSON(pt), "$['coordinates'][1]") AS FLOAT64) as lat
  )
);
--
-- Creates a port-id based in the iso3 and the label of the port
--
CREATE TEMPORARY FUNCTION
  generate_port_id (iso3 STRING,
    label STRING) AS ( LOWER(CONCAT(iso3,"-",REGEXP_REPLACE(NORMALIZE(label),' ',''))) );

--
-- Converts a UVI to the RFMO authorizations apply to
--
CREATE TEMPORARY FUNCTION
  extract_rfmo_from_list_uvi(uvi STRING) AS (
    CASE SPLIT(uvi, "-")[
  OFFSET
    (0)]
      WHEN "TWN" THEN "IOTC"
      WHEN "TWN2" THEN "IOTC"
      WHEN "TWN3" THEN "IOTC"
      WHEN "WCPFC" THEN "WCPFC"
      WHEN "WCPFC2" THEN "WCPFC"
      WHEN "IATTC" THEN "IATTC"
      WHEN "IATTC2" THEN "IATTC"
      WHEN "IATTC3" THEN "IATTC"
      WHEN "ICCAT" THEN "ICCAT"
      WHEN "ICCAT2" THEN "ICCAT"
      WHEN "ICCAT3" THEN "ICCAT"
      WHEN "IOTC" THEN "IOTC"
      WHEN "CCSBT" THEN "CCSBT"
      /* WHEN "NPFC" THEN "NPFC" */
      /* WHEN "SPRFMO" THEN "SPRFMO" */
  END
    );
--
-- Returns true an rfmo is whitelisted so that authorizations should be
-- computed for it
--
CREATE TEMPORARY FUNCTION
  is_whitelisted_rfmo(rfmo STRING) AS ( rfmo IN (
      "ICCAT",
      "IOTC",
      "WCPFC",
      "IATTC",
      "CCSBT" ) );
